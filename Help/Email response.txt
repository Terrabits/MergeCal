Hey guys,

I'll start with my availability

My PTO is from May 6-26th (three weeks). I will not be available to travel May 5th or 6th, so this leaves the week of April 27-May 1st as the last week that I can visit Boeing. This week gives me the most time to work. This isn't as much time as I'd like, especially since I have ZNrun demos to support, but it is what it is.

In the future if at all possible I'd like to get involved with the customer at the proof of concept phase. This would give me a chance to provide my input and get a head start coming up with a solution. It would also give me a chance to estimate the scope of the project and check my schedule to make sure that I can commit to the timeline.

I recognize that this is not always possible, but I'd like you to keep it in mind in the future.

That said, here are the technical details of the project:

Mike,
I took a look at your example script, and we are indeed on the same page. My "work around" is in fact performing the calibration steps without standards connected.

Here is the script that I created to exercise these steps and make sure I understand. It uses C++ and RsaToolbox, but it is straightforward enough that it should make sense.

<<< snippet.cpp >>>

For this approach I have two caveats to provide. The second caveat is the most critical:

1. For slow sweep times, this step will make the user wait for a long time before they can proceed. As an experiment I tried increasing the IF BW to reduce this measurement time, running dummy standard measurements, then changed it back. Unfortunately when I do this the firmware recognizes that the sweep settings have changed and will not let me continue the calibration with the new settings.

I will provide the user with a warning 

2. On occasion the firmware may not be able to calculate corrections from the dummy sweeps.

I ran into this issue while testing TOSM with Autocal. When testing remotely on a remote ZNB in the Columbia office, or locally on my ZNB firmware simulator, I was not able to physically connect the standards and perform the calibration steps. Most of the time the firmware would apply the calibration, but every once in a while it would give me an error that the measured calibration data was not valid. This is presumably because the firmware is not able to calculate the corrections from these measurements. When this happened, the instrument would be left on the calibration screen in calibration mode.

I did not pay much attention to this error since it was not part of the use case of TOSM with Autocal, but it will be important for this application. When this happens, I will not be able to proceed.

That said, I will build the application as you've described, and it should work most of the time. I will try to catch this case where the firmware will not proceed. Sometimes just re-running the same steps will work. We can mention this shortcoming to the customer and, if deemed critical, work with Munich to get a work-around.

Below I've attached screenshots for the application as I understand it. Please look these over and confirm that this is what you want. There is also a summary of the organization of the project and the scope of the work involved.

<<< Summary ppt >>>

If I can hold the proposed timeline, I should be able to finish this project by the time I visit the customer.

- Nick